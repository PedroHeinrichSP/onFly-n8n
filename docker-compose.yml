services:
  postgres:
    image: postgres:15
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_NON_ROOT_USER: ${POSTGRES_NON_ROOT_USER}
      POSTGRES_NON_ROOT_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: ${N8N_IMAGE:-docker.n8n.io/n8nio/n8n:1.85.4}
    container_name: n8n
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      # Timezone
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE:-America/Sao_Paulo}
      TZ: ${TZ:-America/Sao_Paulo}
      # DB
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_NON_ROOT_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
      DB_POSTGRESDB_SCHEMA: public
      # Segurança básica
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
      N8N_RUNNERS_ENABLED: "true"
      # Encryption key
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      # Custom nodes
      N8N_CUSTOM_EXTENSIONS: /home/node/.n8n/custom
    volumes:
      - n8n_data:/home/node/.n8n
      - ./custom-nodes:/opt/custom-nodes

volumes:
  pg_data:
  n8n_data:
